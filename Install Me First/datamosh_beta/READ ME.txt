
Datamosh Plugin

A realtime compression-artifacting plugin for Quartz Composer.
----

Written by Tom Butterworth (bangnoise)
bangnoise@gmail.com

----

Licensed under a Creative Commons, Attribution - Non-Commercial - Share Alike 3.0 License.

http://creativecommons.org/licenses/by-nc-sa/3.0/

This permits any use other than commercial use. Using the plug-in for paid live performance is fine, using it for commercial work including music videos or including it in a commercial product is not. For queries about commercial use contact bangnoise@gmail.com.

----

Installation:

- Place the plugin in your "~/Library/Graphics/Quartz Composer Plug-Ins/" folder.
- A sample composition and a qcFX file for VDMX as well as mixers for CoGe are included. To use the plugin with VDMX, place this file in your "~/Library/Application Support/VDMX/qcFX/" folder. You may wish to customise this file to suit your workflow.

----

Notes:

Currently the Datamosh plugin will not work in applications running in 64-bit mode. This is likely not a problem for most applications you might use to perform with, which will be 32-bit only, but does affect Quartz Composer, which runs in 64-bit mode by default. To use the plugin in Quartz Composer, select Quartz Composer's icon in the Finder, in the File menu choose Get Info, then check the "Open in 32-bit mode" checkbox.

A future update will add 64-bit support.

This version has different inputs from 1.0. You will need to reconnect some of the inputs if you have compositions built with version 1.0.

To use the Theora codec it must be installed. It is available from http://xiph.org/quicktime/.

This is a beta of a future release. Please report any issues to bangnoise@gmail.com.

----

Ports:

Codec
- Select a codec to use.

Width, Height
- The pixel dimensions of the output image.

Drop Spare Key Frames
- Allows for uninterrupted artifacting by filtering key-frames so they never get decompressed (except those added with "Insert Key Frame"). This only affects H.264 and causes artifacting even in ummoshed video. If you need to output clean video but don't want to bypass the plugin, then turn this off.

Video N Image
- Attach any images here. They must be changing (eg video) to produce output.

Video N Active
- When true, the video input will contribute frames for decoding.

Video N Insert Key Frame
- When this input changes from false to true a key frame from the source is inserted. Typically this will clear compression artifacts.

Video N Bloom
- When true, the latest frame for the input is repeated. The effect of this varies according to the codec.

----

Settings:

Execution Mode:
- In "Live Performance" mode, some frames are dropped but the plugin is more responsive and achieves a faster frame-rate.
- In "Offline Render" mode, the plugin renders every image it receives on its inputs.

Number of Inputs:
- A number from 1 to 10. Note that all inputs are compressed all the time (to minimise frame differences when they become active), and that compression is an expensive process.

----

About:

I watched Bob Weisz's videos here and realised how easy it would be to do in realtime...

http://createdigitalmotion.com/2009/03/13/how-to-datamosh-with-free-video-tools-datamosh-is-the-wrong-word-david-oreilly-is-also-wrong/

----

Changes:

1.1b6 Add support for H.263 and Theora codec if installed, fix issues which affected VDMX and CoGe on MacOS 10.8.2 8 October 2012
1.1b4 Fix for issues with frame dimensions less than 15 pixels 13 January 2011
1.1b3 Support for hardware decoding when available 4 January 2011
1.1b2 Fix for memory issues affecting 1.1b 5 October 2010
1.1b Beta for GLI.TC/H Chicago. Added variable input count and bloom 2 October 2010
1.01 Bugfix release and updated qcFX 25 August 2010
1.0 Initial release 16 June 2009
